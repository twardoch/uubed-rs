{"$message_type":"diagnostic","message":"expected outer doc comment","code":{"code":"E0753","explanation":"An inner doc comment was used in an invalid context.\n\nErroneous code example:\n\n```compile_fail,E0753\nfn foo() {}\n//! foo\n// ^ error!\nfn main() {}\n```\n\nInner document can only be used before items. For example:\n\n```\n//! A working comment applied to the module!\nfn foo() {\n    //! Another working comment!\n}\nfn main() {}\n```\n\nIn case you want to document the item following the doc comment, you might want\nto use outer doc comment:\n\n```\n/// I am an outer doc comment\n#[doc = \"I am also an outer doc comment!\"]\nfn foo() {\n    // ...\n}\n```\n"},"level":"error","spans":[{"file_name":"rust/examples/../src/encoders/topk.rs","byte_start":94,"byte_end":116,"line_start":4,"line_end":4,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"use rayon::prelude::*;","highlight_start":1,"highlight_end":23}],"label":"the inner doc comment doesn't annotate this `use` import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/examples/../src/encoders/topk.rs","byte_start":40,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":53,"is_primary":true,"text":[{"text":"//! Top-k indices encoder for sparse representation.","highlight_start":1,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to annotate the `use` import, change the doc comment from inner to outer style","code":null,"level":"help","spans":[{"file_name":"rust/examples/../src/encoders/topk.rs","byte_start":42,"byte_end":43,"line_start":2,"line_end":2,"column_start":3,"column_end":4,"is_primary":true,"text":[{"text":"//! Top-k indices encoder for sparse representation.","highlight_start":3,"highlight_end":4}],"label":null,"suggested_replacement":"/","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0753]\u001b[0m\u001b[0m\u001b[1m: expected outer doc comment\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/examples/../src/encoders/topk.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//! Top-k indices encoder for sparse representation.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rayon::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe inner doc comment doesn't annotate this `use` import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to annotate the `use` import, change the doc comment from inner to outer style\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m//\u001b[0m\u001b[0m\u001b[38;5;9m!\u001b[0m\u001b[0m Top-k indices encoder for sparse representation.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m//\u001b[0m\u001b[0m\u001b[38;5;10m/\u001b[0m\u001b[0m Top-k indices encoder for sparse representation.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected outer doc comment","code":{"code":"E0753","explanation":"An inner doc comment was used in an invalid context.\n\nErroneous code example:\n\n```compile_fail,E0753\nfn foo() {}\n//! foo\n// ^ error!\nfn main() {}\n```\n\nInner document can only be used before items. For example:\n\n```\n//! A working comment applied to the module!\nfn foo() {\n    //! Another working comment!\n}\nfn main() {}\n```\n\nIn case you want to document the item following the doc comment, you might want\nto use outer doc comment:\n\n```\n/// I am an outer doc comment\n#[doc = \"I am also an outer doc comment!\"]\nfn foo() {\n    // ...\n}\n```\n"},"level":"error","spans":[{"file_name":"rust/examples/../src/encoders/simhash.rs","byte_start":108,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"use rayon::prelude::*;","highlight_start":1,"highlight_end":23}],"label":"the inner doc comment doesn't annotate this `use` import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/examples/../src/encoders/simhash.rs","byte_start":43,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":64,"is_primary":true,"text":[{"text":"//! SimHash implementation with parallel matrix multiplication.","highlight_start":1,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to annotate the `use` import, change the doc comment from inner to outer style","code":null,"level":"help","spans":[{"file_name":"rust/examples/../src/encoders/simhash.rs","byte_start":45,"byte_end":46,"line_start":2,"line_end":2,"column_start":3,"column_end":4,"is_primary":true,"text":[{"text":"//! SimHash implementation with parallel matrix multiplication.","highlight_start":3,"highlight_end":4}],"label":null,"suggested_replacement":"/","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0753]\u001b[0m\u001b[0m\u001b[1m: expected outer doc comment\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/examples/../src/encoders/simhash.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//! SimHash implementation with parallel matrix multiplication.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rayon::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe inner doc comment doesn't annotate this `use` import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to annotate the `use` import, change the doc comment from inner to outer style\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m//\u001b[0m\u001b[0m\u001b[38;5;9m!\u001b[0m\u001b[0m SimHash implementation with parallel matrix multiplication.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m//\u001b[0m\u001b[0m\u001b[38;5;10m/\u001b[0m\u001b[0m SimHash implementation with parallel matrix multiplication.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected outer doc comment","code":{"code":"E0753","explanation":"An inner doc comment was used in an invalid context.\n\nErroneous code example:\n\n```compile_fail,E0753\nfn foo() {}\n//! foo\n// ^ error!\nfn main() {}\n```\n\nInner document can only be used before items. For example:\n\n```\n//! A working comment applied to the module!\nfn foo() {\n    //! Another working comment!\n}\nfn main() {}\n```\n\nIn case you want to document the item following the doc comment, you might want\nto use outer doc comment:\n\n```\n/// I am an outer doc comment\n#[doc = \"I am also an outer doc comment!\"]\nfn foo() {\n    // ...\n}\n```\n"},"level":"error","spans":[{"file_name":"rust/examples/../src/encoders/zorder.rs","byte_start":42,"byte_end":97,"line_start":2,"line_end":2,"column_start":1,"column_end":56,"is_primary":true,"text":[{"text":"//! Z-order (Morton code) encoder for spatial locality.","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"inner doc comments like this (starting with `//!` or `/*!`) can only appear before items","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you might have meant to write a regular comment","code":null,"level":"help","spans":[{"file_name":"rust/examples/../src/encoders/zorder.rs","byte_start":44,"byte_end":45,"line_start":2,"line_end":2,"column_start":3,"column_end":4,"is_primary":true,"text":[{"text":"//! Z-order (Morton code) encoder for spatial locality.","highlight_start":3,"highlight_end":4}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0753]\u001b[0m\u001b[0m\u001b[1m: expected outer doc comment\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/examples/../src/encoders/zorder.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//! Z-order (Morton code) encoder for spatial locality.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: inner doc comments like this (starting with `//!` or `/*!`) can only appear before items\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to write a regular comment\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m//\u001b[0m\u001b[0m\u001b[38;5;9m!\u001b[0m\u001b[0m Z-order (Morton code) encoder for spatial locality.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m// Z-order (Morton code) encoder for spatial locality.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `encoders::q64_encode`, `encoders::simhash_q64`, `encoders::top_k_q64`, `encoders::z_order_q64`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"rust/examples/thread_safety_demo.rs","byte_start":557,"byte_end":567,"line_start":24,"line_end":24,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"use encoders::{q64_encode, simhash_q64, top_k_q64, z_order_q64};","highlight_start":16,"highlight_end":26}],"label":"no `q64_encode` in `encoders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/examples/thread_safety_demo.rs","byte_start":569,"byte_end":580,"line_start":24,"line_end":24,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"use encoders::{q64_encode, simhash_q64, top_k_q64, z_order_q64};","highlight_start":28,"highlight_end":39}],"label":"no `simhash_q64` in `encoders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/examples/thread_safety_demo.rs","byte_start":582,"byte_end":591,"line_start":24,"line_end":24,"column_start":41,"column_end":50,"is_primary":true,"text":[{"text":"use encoders::{q64_encode, simhash_q64, top_k_q64, z_order_q64};","highlight_start":41,"highlight_end":50}],"label":"no `top_k_q64` in `encoders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/examples/thread_safety_demo.rs","byte_start":593,"byte_end":604,"line_start":24,"line_end":24,"column_start":52,"column_end":63,"is_primary":true,"text":[{"text":"use encoders::{q64_encode, simhash_q64, top_k_q64, z_order_q64};","highlight_start":52,"highlight_end":63}],"label":"no `z_order_q64` in `encoders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `encoders::q64_encode`, `encoders::simhash_q64`, `encoders::top_k_q64`, `encoders::z_order_q64`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/examples/thread_safety_demo.rs:24:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse encoders::{q64_encode, simhash_q64, top_k_q64, z_order_q64};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `z_order_q64` in `encoders`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `top_k_q64` in `encoders`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `simhash_q64` in `encoders`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `q64_encode` in `encoders`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0432, E0753.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0432, E0753.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0432`.\u001b[0m\n"}
