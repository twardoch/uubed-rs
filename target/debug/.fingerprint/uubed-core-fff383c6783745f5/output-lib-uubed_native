{"$message_type":"diagnostic","message":"unresolved import `std::os::raw::c_size_t`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":880,"byte_end":888,"line_start":25,"line_end":25,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use std::os::raw::{c_char, c_int, c_uchar, c_uint, c_size_t};","highlight_start":52,"highlight_end":60}],"label":"no `c_size_t` in `os::raw`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this type alias instead:\ncore::ffi::c_size_t","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `std::os::raw::c_size_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:25:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::raw::{c_char, c_int, c_uchar, c_uint, c_size_t};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_size_t` in `os::raw`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this type alias instead:\u001b[0m\n\u001b[0m           core::ffi::c_size_t\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused doc comment","code":{"code":"unused_doc_comments","explanation":null},"level":"warning","spans":[{"file_name":"rust/src/capi.rs","byte_start":1863,"byte_end":1906,"line_start":62,"line_end":62,"column_start":1,"column_end":44,"is_primary":true,"text":[{"text":"/// Thread-local storage for error messages","highlight_start":1,"highlight_end":44}],"label":"rustdoc does not generate documentation for macro invocations","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to document an item produced by a macro, the macro must produce the documentation as part of its expansion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_doc_comments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused doc comment\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:62:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// Thread-local storage for error messages\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mrustdoc does not generate documentation for macro invocations\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_doc_comments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":6436,"byte_end":6459,"line_start":220,"line_end":220,"column_start":25,"column_end":48,"is_primary":true,"text":[{"text":"    match handle_result(q64_decode(encoded_str)) {","highlight_start":25,"highlight_end":48}],"label":"expected `Result<_, UubedError>`, found `Result<Vec<u8>, Q64Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":6422,"byte_end":6435,"line_start":220,"line_end":220,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(q64_decode(encoded_str)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n   found enum `Result<Vec<u8>, Q64Error>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":6436,"byte_end":6436,"line_start":220,"line_end":220,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(q64_decode(encoded_str)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":6459,"byte_end":6459,"line_start":220,"line_end":220,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"    match handle_result(q64_decode(encoded_str)) {","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:220:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(q64_decode(encoded_str)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `Result<Vec<u8>, Q64Error>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `Result<\u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35merror::UubedError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found enum `Result<\u001b[0m\u001b[0m\u001b[1m\u001b[35mVec<u8>\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mQ64Error\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0mq64_decode(encoded_str)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":7812,"byte_end":7859,"line_start":264,"line_end":264,"column_start":25,"column_end":72,"is_primary":true,"text":[{"text":"    match handle_result(q64_encode_to_buffer(input_slice, output_slice)) {","highlight_start":25,"highlight_end":72}],"label":"expected `Result<_, UubedError>`, found `Result<usize, Q64Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":7798,"byte_end":7811,"line_start":264,"line_end":264,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(q64_encode_to_buffer(input_slice, output_slice)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n   found enum `Result<usize, Q64Error>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":7812,"byte_end":7812,"line_start":264,"line_end":264,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(q64_encode_to_buffer(input_slice, output_slice)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":7859,"byte_end":7859,"line_start":264,"line_end":264,"column_start":72,"column_end":72,"is_primary":true,"text":[{"text":"    match handle_result(q64_encode_to_buffer(input_slice, output_slice)) {","highlight_start":72,"highlight_end":72}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:264:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(q64_encode_to_buffer(input_slice, output_slice)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `Result<usize, Q64Error>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `Result<\u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35merror::UubedError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found enum `Result<\u001b[0m\u001b[0m\u001b[1m\u001b[35musize\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mQ64Error\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0mq64_encode_to_buffer(input_slice, output_slice)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":8767,"byte_end":8808,"line_start":298,"line_end":298,"column_start":25,"column_end":66,"is_primary":true,"text":[{"text":"    match handle_result(simhash_q64(input_slice, planes as usize)) {","highlight_start":25,"highlight_end":66}],"label":"expected `Result<_, UubedError>`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":8753,"byte_end":8766,"line_start":298,"line_end":298,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(simhash_q64(input_slice, planes as usize)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n found struct `String`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":8767,"byte_end":8767,"line_start":298,"line_end":298,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(simhash_q64(input_slice, planes as usize)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":8808,"byte_end":8808,"line_start":298,"line_end":298,"column_start":66,"column_end":66,"is_primary":true,"text":[{"text":"    match handle_result(simhash_q64(input_slice, planes as usize)) {","highlight_start":66,"highlight_end":66}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:298:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(simhash_q64(input_slice, planes as usize)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, error::UubedError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m             found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mString\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0msimhash_q64(input_slice, planes as usize)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":9891,"byte_end":9925,"line_start":337,"line_end":337,"column_start":25,"column_end":59,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64(input_slice, k as usize)) {","highlight_start":25,"highlight_end":59}],"label":"expected `Result<_, UubedError>`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":9877,"byte_end":9890,"line_start":337,"line_end":337,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(top_k_q64(input_slice, k as usize)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n found struct `String`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":9891,"byte_end":9891,"line_start":337,"line_end":337,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64(input_slice, k as usize)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":9925,"byte_end":9925,"line_start":337,"line_end":337,"column_start":59,"column_end":59,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64(input_slice, k as usize)) {","highlight_start":59,"highlight_end":59}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:337:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(top_k_q64(input_slice, k as usize)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, error::UubedError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m             found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mString\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0mtop_k_q64(input_slice, k as usize)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":11028,"byte_end":11072,"line_start":376,"line_end":376,"column_start":25,"column_end":69,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64_optimized(input_slice, k as usize)) {","highlight_start":25,"highlight_end":69}],"label":"expected `Result<_, UubedError>`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":11014,"byte_end":11027,"line_start":376,"line_end":376,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(top_k_q64_optimized(input_slice, k as usize)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n found struct `String`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":11028,"byte_end":11028,"line_start":376,"line_end":376,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64_optimized(input_slice, k as usize)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":11072,"byte_end":11072,"line_start":376,"line_end":376,"column_start":69,"column_end":69,"is_primary":true,"text":[{"text":"    match handle_result(top_k_q64_optimized(input_slice, k as usize)) {","highlight_start":69,"highlight_end":69}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:376:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(top_k_q64_optimized(input_slice, k as usize)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, error::UubedError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m             found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mString\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0mtop_k_q64_optimized(input_slice, k as usize)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"rust/src/capi.rs","byte_start":12084,"byte_end":12108,"line_start":413,"line_end":413,"column_start":25,"column_end":49,"is_primary":true,"text":[{"text":"    match handle_result(z_order_q64(input_slice)) {","highlight_start":25,"highlight_end":49}],"label":"expected `Result<_, UubedError>`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":12070,"byte_end":12083,"line_start":413,"line_end":413,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"    match handle_result(z_order_q64(input_slice)) {","highlight_start":11,"highlight_end":24}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<_, error::UubedError>`\n found struct `String`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"rust/src/capi.rs","byte_start":2981,"byte_end":3003,"line_start":92,"line_end":92,"column_start":21,"column_end":43,"is_primary":false,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":21,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rust/src/capi.rs","byte_start":2964,"byte_end":2977,"line_start":92,"line_end":92,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"rust/src/capi.rs","byte_start":12084,"byte_end":12084,"line_start":413,"line_end":413,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    match handle_result(z_order_q64(input_slice)) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"rust/src/capi.rs","byte_start":12108,"byte_end":12108,"line_start":413,"line_end":413,"column_start":49,"column_end":49,"is_primary":true,"text":[{"text":"    match handle_result(z_order_q64(input_slice)) {","highlight_start":49,"highlight_end":49}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:413:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match handle_result(z_order_q64(input_slice)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<_, UubedError>`, found `String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, error::UubedError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m             found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mString\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrust/src/capi.rs:92:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn handle_result<T>(result: UubedResult<T>) -> Result<T, UubedErrorCode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Ok`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    match handle_result(\u001b[0m\u001b[0m\u001b[38;5;10mOk(\u001b[0m\u001b[0mz_order_q64(input_slice)\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 7 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 7 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
